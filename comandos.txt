MKDIR => Criar Pasta

LS => Pesquisa dentro da pasta ou do diretorio

TOUCH => Criar arquivo

RM => Deletar arquivo

RM - R => Deletar diretorio

CD [ Mais o nome pasta ] => Ele vai para pasta seguinte

CD.. Ele volta o caminho anterior

CLEAR => Ele limpa a tela

///////////////////////


CRIAÇÃO DO PACKAGE.JSON É => npm init


///////////////////////


COMANDO DO WEBPACK

$ npm install --save-dev webpack webpack-cli


OBS => [ COMANDO -DEV ELE É USADO FORA DOS COMANDOS DO PROJETO  E NÃO DENTRO]

 npx webpack js/script.js --output ./main.js --watch

 COMANDO ACIMA É:
 PEGAR A PASTA QUE QUERO MINIFICAR
 MOSTRAR O CAMINHO DA PASTA QUE SERA MINIFICADA
 
 O WATCH TODA MODIFICAÇÃO QUE TEM NO ARQUIVO ELE ATUALIZA AUTOMATICO


ARQUIVOS EM PRODUÇÃO
webpack --mode production ./script.js output ./main.js 

ARQUIVOS EM DESENVOLVIMENTO ( DEV )
webpack --mode development --watch ./script.js output ./main.js 



///////////////////////

BABEL( babeljs.io )

PLYFILL É => CRIA FUNCÇÕES COM O MESMO NOME ATUAIS PORÉM UTILIZANDO O CÓDIGO antigo
npm install --save @babel/polyfill
-
TRANSPILER É => TRANSFORMAR CÓDIGO NOVO EM CÓDIGO ANTIGO EX( CONST PARA VAR)
npm install --save-dev @babel/core @babel/cli @babel/preset-env
-
PARA FETCH polyfill( Só instalar ele e chamar tb no arquivo ( webpack.config.js )
npm install whatwg-fetch --save


Ele transforma o codigo novo em codigo antigo
Pra que? R: prá dá Browser Suporte





